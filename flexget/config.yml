web_server:
  bind: 0.0.0.0
  port: 3539
  web_ui: yes
templates:
  global:
    transmission:
      host: transmission
      port: 9091
      username: admin
      password: "123456"
  anime_watching:
    discover:
      what:
        - next_trakt_episodes:
            username: juandiegost
            account: juandiegost
            context: watched
            list: lista-series
      from:
        - argenteam:
            force_subtitles: yes
        - search_rss:
            url: https://nyaa.si/?page=rss&u=Erai-raws 
            all_entries: yes
            ascii: yes
            escape: yes
            link:
              - link
              - magneturi    
      interval: 15 minutes
    series:
      settings:
        all:
          tracking: backfill
          # Normal ID regexp matches anime CRC32s, so be more strict
          # Matches e.g. "Title - 01 [12345678]", "Title.01.[12345678]",
          # "Title_01_[12345678]", "Title - 01v2 [12345678]",
          # "Title - 01.5 [12345678]"
          id_regexp: '[ \._\-](\d+(?:\.\d+)?)[ \._\-v]'
          identified_by: sequence
          set:
            path: "/downloads/complete/Anime/{{series_name}}"
            content_filename: "{{series_name}} - {{series_id | pad(2)}}"
  tv_watching:
    rss: https://nyaa.si/?page=rss&u=Erai-raws
    series:
      settings:
        all:
          set:
            main_file_only: yes
            rename_like_files: yes
            path: "/downloads/complete/TV/{{series_name}}"
            content_filename: "{{series_name}} - {{series_id}}"
            skip_files:
              - "*.nfo"
              - "*.sfv"
              - "*[sS]ample*"
              - "*.txt"
tasks:
  nyaa_anime:
    template: anime_watching
    include: anime-watching.yml
  showrss_tv:
    template: tv_watching
    include: tv-watching.yml
  sort_anime:
    priority: 2
    no_entries_ok: yes
    parsing:
      series: guessit
    filesystem:
      path: /downloads/complete/Anime
      regexp: '.*\.(avi|mkv|mp4)$'
      recursive: yes
    accept_all: yes
    thetvdb_lookup: yes
    require_field: series_name
    all_series:
      parse_only: yes
    exec:
      auto_escape: yes
      on_output:
        for_entries: |
          mkdir -p "/sync/Anime/{{ series_name }}/Season {{ series_season }}" && mv "{{ location }}"  "/sync/Anime/{{ series_name }}/Season {{ series_season }}/{{ series_name }} - {{ series_id }}{{ location | pathext }}"
  sort_movies:
    priority: 2
    no_entries_ok: yes
    filesystem:
      path: /downloads/complete
      regexp: '.*\.(avi|mkv|mp4)$'
      recursive: yes
    accept_all: yes
    require_field: movie_name
    imdb_lookup: yes
    exec:
      auto_escape: yes
      on_output:
        for_entries: |
          if mediainfo "{{ location }}" | grep EAC3; then
            mkdir -p "/storage/pelis/{{ movie_name }} ({{ movie_year }})" && ffmpeg -hwaccel auto -y -i "{{ location }}" -map 0 -c:s copy -c:v copy -c:a ac3 -b:a 640k "/storage/pelis/{{ movie_name }} ({{ movie_year }})/{{ movie_name }} ({{ movie_year }}){{ location | pathext }}"
          else
            mkdir -p "/storage/pelis/{{ movie_name }} ({{ movie_year }})" && cp "{{ location }}" "/storage/pelis/{{ movie_name }} ({{ movie_year }})/{{ movie_name }} ({{ movie_year }}){{ location | pathext }}"
          fi
  remove_stale_torrents:
    from_transmission:
      host: transmission
      port: 9091
      username: admin
      password: "123456"
    disable: [seen, seen_info_hash]
    if:
      - transmission_progress == 1: accept
      - not transmission_seed_ratio_ok: reject
      - not transmission_idle_limit_ok: reject
    transmission:
      host: transmission
      port: 9091
      username: admin
      password: "123456"
      action: purge
schedules:
  - tasks: 'sort_*'
    interval:
      minutes: 5
  - tasks: 'showrss_tv'
    interval:
      hours: 1
  - tasks: 'nyaa_anime'
    interval:
      minutes: 15 
  - tasks: 'remove_stale_torrents'
    interval:
      hours: 1